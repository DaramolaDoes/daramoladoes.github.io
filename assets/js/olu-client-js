(async function(){
  const input = document.querySelector('#oluInput');
  const btn   = document.querySelector('#oluAsk');
  const out   = document.querySelector('#oluOut');

  // TODO: replace with your Cloudflare Worker URL once deployed
  const API = 'https://YOUR-WORKER.workers.dev/api/olu';

  function escapeHtml(s){ return s.replace(/[&<>"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m])); }
  function render(answer, sources){
    const cites = (sources||[]).map(s => `<li>${s.url ? `<a href="${s.url}">${escapeHtml(s.title||'Source')}</a>` : escapeHtml(s.title||'Source')}</li>`).join('');
    out.innerHTML = `
      <div style="color:#6b7280;font-weight:600;margin-bottom:6px">Olu • Answer</div>
      <div>${(answer||'').replace(/\n/g,'<br/>')}</div>
      ${cites ? `<div style="margin-top:10px"><strong>Sources</strong><ul>${cites}</ul></div>` : ''}
    `;
  }

  async function ask(){
    const q = (input.value || '').trim();
    if (!q) return;
    out.textContent = 'Thinking…';
    try {
      const r = await fetch(API, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ query: q }) });
      const j = await r.json();
      if (!r.ok) throw new Error(j.error || 'Request failed');
      render(j.answer, j.sources);
    } catch (e){ out.textContent = e.message || 'Error'; }
  }

  btn?.addEventListener('click', ask);
  input?.addEventListener('keydown', e => { if (e.key === 'Enter') ask(); });
})();
